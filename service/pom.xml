<?xml version="1.0" encoding="UTF-8" standalone="no"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>tempo</groupId>
    <artifactId>tempo-service</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>tempo-core</module>
        <module>tempo-db</module>
    </modules>
    <packaging>pom</packaging>

    <name>Tempo Parent</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.source.version>11</java.source.version>
        <java.target.version>11</java.target.version>
        <min.maven.version>3.3.0</min.maven.version>

        <!-- Main dependencies -->
        <jooq.version>3.11.9</jooq.version>
        <jsr205.version>1.0</jsr205.version>
        <jetty.version>9.4.14.v20181114</jetty.version>
        <postgres.version>42.2.25</postgres.version>
        <flyway.version>5.0.2</flyway.version>
        <google.version>1.1</google.version>
        <jackson.version>2.12.7.1</jackson.version>

        <!-- Test dependencies -->
        <junit.jupiter.version>5.3.2</junit.jupiter.version>
        <postgresql.embedded.version>2.10</postgresql.embedded.version>

        <!-- Plugins -->
        <compiler.plugin.version>3.7.0</compiler.plugin.version>
        <surefire.plugin.version>3.0.0-M1</surefire.plugin.version>
        <clean.plugin.version>3.1.0</clean.plugin.version>
        <deploy.plugin.version>3.0.0-M1</deploy.plugin.version>
        <exec.plugin.version>1.6.0</exec.plugin.version>
        <jar.plugin.version>3.1.0</jar.plugin.version>
        <assembly.plugin.version>3.1.0</assembly.plugin.version>
        <dependency.plugin.version>3.1.1</dependency.plugin.version>
        <enforcer.plugin.version>3.0.0-M2</enforcer.plugin.version>
        <build.helper.plugin.version>3.0.0</build.helper.plugin.version>
        <shade.plugin.version>3.2.0</shade.plugin.version>
        <site.plugin.version>3.7.1</site.plugin.version>
        <commit.id.plugin.version>2.2.5</commit.id.plugin.version>
        <install.plugin.version>2.5.2</install.plugin.version>
        <release.plugin.version>2.5.3</release.plugin.version>
        <spotbugs.plugin.version>3.1.8</spotbugs.plugin.version>
    </properties>

    <scm>
        <developerConnection>scm:git:ssh://git@github.com/Masfik/tempo</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-bom</artifactId>
                <version>${jetty.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jooq</groupId>
                <artifactId>jooq</artifactId>
                <version>${jooq.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>jsr250-api</artifactId>
                <version>${jsr205.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgres.version}</version>
            </dependency>
            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>${flyway.version}</version>
            </dependency>
            <dependency>
                <groupId>com.googlecode.json-simple</groupId>
                <artifactId>json-simple</artifactId>
                <version>${google.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- Test dependencies -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${jar.plugin.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${release.plugin.version}</version>
                    <configuration>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <goals>install</goals>
                        <useReleaseProfile>false</useReleaseProfile>
                        <tagNameFormat>service/@{version}</tagNameFormat>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${install.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${compiler.plugin.version}</version>
                    <configuration>
                        <source>${java.source.version}</source>
                        <target>${java.target.version}</target>
                        <compilerArgs>
                            <arg>-Xlint:deprecation</arg>
                            <arg>-Xlint:unchecked</arg>
                            <arg>-parameters</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>default-test</id>
                            <phase>test</phase>
                            <configuration>
                                <excludedGroups>integration</excludedGroups>
                            </configuration>
                        </execution>
                        <execution>
                            <!-- Integration tests require Erlang, so that a RabbitMQ broken instance can be spun up -->
                            <id>integration-test</id>
                            <phase>integration-test</phase>
                            <goals>
                                <goal>test</goal>
                            </goals>
                            <configuration>
                                <groups>integration</groups>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>${spotbugs.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${clean.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${deploy.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${dependency.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec.plugin.version}</version>
                    <!--
                        Compile with `mvn install`
                        Build with `mvn exec:java`
                    -->
                    <configuration>
                        <mainClass>com.tempo.TempoService</mainClass>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${assembly.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build.helper.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${shade.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${site.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.flywaydb</groupId>
                    <artifactId>flyway-maven-plugin</artifactId>
                    <version>${flyway.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jooq</groupId>
                    <artifactId>jooq-codegen-maven</artifactId>
                    <version>${jooq.version}</version>
                </plugin>
                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <version>${commit.id.plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${enforcer.plugin.version}</version>
                <configuration>
                    <rules>
                        <requireJavaVersion>
                            <version>${java.source.version}</version>
                        </requireJavaVersion>
                        <requireMavenVersion>
                            <version>${min.maven.version}</version>
                        </requireMavenVersion>
                        <dependencyConvergence />
                        <reactorModuleConvergence>
                            <ignoreModuleDependencies>true</ignoreModuleDependencies>
                        </reactorModuleConvergence>
                        <banDuplicateClasses />
                    </rules>

                </configuration>
                <executions>
                    <execution>
                        <id>enforce-java</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <phase>validate</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>flyway-migration</id>

            <activation>
                <file>
                    <exists>src/main/resources/migrations</exists>
                </file>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.flywaydb</groupId>
                        <artifactId>flyway-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>build-schema</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>migrate</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <url>${jdbc.url}</url>
                            <driver>${jdbc.driver}</driver>
                            <user>${jdbc.user}</user>
                            <password>${jdbc.pass}</password>
                            <schemas>
                                <schema>${schema.name}</schema>
                            </schemas>
                            <locations>
                                <location>filesystem:${basedir}/src/main/resources/migrations/${schema.name}/postgres/</location>
                            </locations>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${postgres.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <plugin>
                        <groupId>org.jooq</groupId>
                        <artifactId>jooq-codegen-maven</artifactId>
                        <executions>
                            <execution>
                                <id>generate-java</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <jdbc>
                                <driver>${jdbc.driver}</driver>
                                <url>${jdbc.url}</url>
                                <user>${jdbc.user}</user>
                                <password>${jdbc.pass}</password>
                            </jdbc>
                            <generator>
                                <name>org.jooq.codegen.JavaGenerator</name>
                                <database>
                                    <name>org.jooq.meta.postgres.PostgresDatabase</name>
                                    <includes>.*</includes>
                                    <excludes />
                                    <inputSchema>${schema.name}</inputSchema>
                                    <forcedTypes>
                                        <forcedType>
                                            <name>CLOB</name>
                                            <types>CITEXT</types>
                                        </forcedType>
                                        <forcedType>
                                            <name>INTERVALDAYTOSECOND</name>
                                            <types>INTERVAL</types>
                                        </forcedType>
                                        <forcedType>
                                            <userType>com.fasterxml.jackson.databind.JsonNode</userType>
                                            <binding>com.tempo.service.dbcommon.PostgresJsonbBinding</binding>
                                            <types>JSONB</types>
                                        </forcedType>
                                        <forcedType>
                                            <userType>java.time.Instant</userType>
                                            <converter>com.tempo.service.dbcommon.OffsetDateTimeToInstantConverter</converter>
                                            <!-- See https://github.com/jOOQ/jOOQ/issues/4691 about escapes -->
                                            <types>TIMESTAMP\ WITH\ TIME\ ZONE</types>
                                        </forcedType>
                                    </forcedTypes>
                                </database>
                                <generate>
                                    <relations>true</relations>
                                    <deprecated>false</deprecated>
                                    <javaTimeTypes>true</javaTimeTypes>
                                    <pojos>true</pojos>
                                    <pojosEqualsAndHashCode>true</pojosEqualsAndHashCode>
                                    <immutablePojos>true</immutablePojos>
                                    <daos>true</daos>
                                    <javaBeansGettersAndSetters>true</javaBeansGettersAndSetters>
                                </generate>
                                <target>
                                    <packageName>${jooq.package.name}</packageName>
                                    <directory>${basedir}/target/generated-sources/jooq</directory>
                                </target>
                            </generator>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${postgres.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>${build.helper.plugin.version}</version>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>${basedir}/target/generated-sources/jooq</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>version-info</id>

            <activation>
                <file>
                    <exists>src/main/resources/tempo-version.properties</exists>
                </file>
            </activation>

            <properties>
                <build.number>unknown</build.number><!-- to be replaced by CI -->
            </properties>

            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>false</filtering>
                    </resource>
                    <resource>
                        <directory>src/main/resources</directory>
                        <includes>
                            <include>tempo-version.properties</include>
                        </includes>
                        <filtering>true</filtering>
                    </resource>
                </resources>

                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>

                        <executions>
                            <execution>
                                <id>add-git-resources</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>add-resource</goal>
                                </goals>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>target/generated-resources</directory>
                                        </resource>
                                    </resources>
                                </configuration>

                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>pl.project13.maven</groupId>
                        <artifactId>git-commit-id-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>revision</goal>
                                </goals>
                            </execution>
                        </executions>

                        <configuration>
                            <failOnNoGitDirectory>false</failOnNoGitDirectory>
                            <generateGitPropertiesFile>true</generateGitPropertiesFile>
                            <generateGitPropertiesFilename>target/generated-resources/tempo-git.properties</generateGitPropertiesFilename>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
